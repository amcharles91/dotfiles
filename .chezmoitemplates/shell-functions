{{- /* Common shell functions */ -}}

# Create directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Extract various archive types
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1"   ;;
            *.tar.gz)    tar xzf "$1"   ;;
            *.bz2)       bunzip2 "$1"   ;;
            *.rar)       unrar x "$1"   ;;
            *.gz)        gunzip "$1"    ;;
            *.tar)       tar xf "$1"    ;;
            *.tbz2)      tar xjf "$1"   ;;
            *.tgz)       tar xzf "$1"   ;;
            *.zip)       unzip "$1"     ;;
            *.Z)         uncompress "$1";;
            *.7z)        7z x "$1"      ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Find process by name
psgrep() {
    if [ ! -z $1 ]; then
        ps aux | grep -v grep | grep -i -e VSZ -e "$1"
    else
        echo "Usage: psgrep <process_name>"
    fi
}

# Create a backup of a file
backup() {
    if [ -f "$1" ]; then
        cp "$1" "$1.bak.$(date +%Y%m%d_%H%M%S)"
        echo "Backup created: $1.bak.$(date +%Y%m%d_%H%M%S)"
    else
        echo "File not found: $1"
    fi
}

# Show directory sizes sorted by size
dsize() {
    du -h --max-depth=1 "${1:-.}" 2>/dev/null | sort -hr
}

# Quick note taking
note() {
    local note_dir="$HOME/notes"
    mkdir -p "$note_dir"
    
    if [ $# -eq 0 ]; then
        # List notes
        ls -la "$note_dir"
    else
        # Create/append to note
        echo "$(date '+%Y-%m-%d %H:%M:%S'): $*" >> "$note_dir/$(date +%Y-%m-%d).md"
        echo "Note saved to $note_dir/$(date +%Y-%m-%d).md"
    fi
}

# Weather function
weather() {
    local location="${1:-}"
    curl -s "wttr.in/${location}?format=3"
}

# Colorized man pages
man() {
    env \
        LESS_TERMCAP_mb=$'\e[1;31m' \
        LESS_TERMCAP_md=$'\e[1;31m' \
        LESS_TERMCAP_me=$'\e[0m' \
        LESS_TERMCAP_se=$'\e[0m' \
        LESS_TERMCAP_so=$'\e[1;44;33m' \
        LESS_TERMCAP_ue=$'\e[0m' \
        LESS_TERMCAP_us=$'\e[1;32m' \
        man "$@"
}