{{- if or (eq .chezmoi.os "darwin") (and (eq .chezmoi.os "linux") (lookPath "zsh")) -}}
#!/bin/zsh
# ~/.zshrc - Zsh configuration

# Enable Powerlevel10k instant prompt if available
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path configuration
export PATH="$HOME/.local/bin:$HOME/bin:$PATH"

# History configuration
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt EXTENDED_HISTORY
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS

# Directory navigation
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT

# Completion
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select

# Initialize Starship prompt
if command -v starship &> /dev/null; then
    eval "$(starship init zsh)"
else
    echo "Warning: Starship not found. Run 'chezmoi apply' to install."
fi

# Common aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias grep='grep --color=auto'

# Git aliases
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git log --oneline'
alias gd='git diff'

# Safety aliases
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# macOS specific settings
{{- if eq .chezmoi.os "darwin" }}
# Homebrew setup
if [[ -f "/opt/homebrew/bin/brew" ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ -f "/usr/local/bin/brew" ]]; then
    eval "$(/usr/local/bin/brew shellenv)"
fi

# macOS aliases
alias showfiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder'
alias hidefiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder'
{{- end }}

# WSL-specific settings
{{- if .isWSL }}
# WSL detected - add Windows interop
export BROWSER="{{ .wsl.browser }}"
alias open="{{ .wsl.browser }}"
alias explorer="explorer.exe"

# Fix WSL2 network issues
if [[ -z "$SSH_AUTH_SOCK" ]]; then
    export SSH_AUTH_SOCK="$HOME/.ssh/agent.sock"
fi
{{- end }}

# Custom functions
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Load local overrides if they exist
if [[ -f "$HOME/.zshrc.local" ]]; then
    source "$HOME/.zshrc.local"
fi
{{- end -}}
