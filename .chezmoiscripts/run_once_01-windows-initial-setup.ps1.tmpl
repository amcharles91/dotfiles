{{ if eq .chezmoi.os "windows" -}}
#!/usr/bin/env pwsh
# Windows Initial Setup - Runs once to prepare the system

Write-Host "`nüöÄ Windows Initial Setup" -ForegroundColor Cyan
Write-Host "=======================" -ForegroundColor Cyan

# Check if running as Administrator
$isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")
if (-not $isAdmin) {
    Write-Warning "Some installations may require administrator privileges"
}

# Check for winget
Write-Host "`nüì¶ Checking for winget..." -ForegroundColor Yellow
try {
    $wingetVersion = winget --version
    Write-Host "‚úÖ winget is installed: $wingetVersion" -ForegroundColor Green
} catch {
    Write-Error "‚ùå winget is not installed!"
    Write-Host "Please install App Installer from Microsoft Store:" -ForegroundColor Yellow
    Write-Host "https://www.microsoft.com/store/productId/9NBLGGH4NNS1" -ForegroundColor Cyan
    exit 1
}

# Check for PowerShell 7
Write-Host "`nüì¶ Checking for PowerShell 7..." -ForegroundColor Yellow
if (Get-Command pwsh -ErrorAction SilentlyContinue) {
    $pwshVersion = pwsh --version
    Write-Host "‚úÖ PowerShell 7 is installed: $pwshVersion" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  PowerShell 7 not found, installing..." -ForegroundColor Yellow
    winget install --id Microsoft.PowerShell -e --accept-package-agreements --accept-source-agreements
    
    # Check if installation succeeded
    if ($LASTEXITCODE -ne 0) {
        Write-Warning "Failed to install PowerShell 7. Scripts will run with PowerShell 5.1"
        Write-Host "To install manually: winget install Microsoft.PowerShell" -ForegroundColor Cyan
    }
}

# Install essential shells and prompt
Write-Host "`nüêö Installing shells and Starship..." -ForegroundColor Yellow

# Starship prompt
if (-not (Get-Command starship -ErrorAction SilentlyContinue)) {
    Write-Host "Installing Starship..." -ForegroundColor Cyan
    winget install --id Starship.Starship -e --accept-package-agreements --accept-source-agreements
} else {
    Write-Host "‚úÖ Starship already installed" -ForegroundColor Green
}

# Fish shell - not available via winget on Windows
# Fish can be installed via WSL or MSYS2 if needed

# Nushell
if (-not (Get-Command nu -ErrorAction SilentlyContinue)) {
    Write-Host "Installing Nushell..." -ForegroundColor Cyan
    winget install --id Nushell.Nushell -e --accept-package-agreements --accept-source-agreements
} else {
    Write-Host "‚úÖ Nushell already installed" -ForegroundColor Green
}

# Install JetBrainsMono Nerd Font
Write-Host "`nüî§ Installing JetBrainsMono Nerd Font..." -ForegroundColor Yellow
$fontInstalled = winget list --id DEVCOM.JetBrainsMonoNerdFont --exact 2>$null | Select-String "JetBrainsMono"

if (-not $fontInstalled) {
    try {
        Write-Host "Installing JetBrainsMono Nerd Font via winget..." -ForegroundColor Cyan
        winget install --id DEVCOM.JetBrainsMonoNerdFont -e --accept-package-agreements --accept-source-agreements
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ JetBrainsMono Nerd Font installed successfully" -ForegroundColor Green
            Write-Host "‚ö†Ô∏è  You may need to restart Windows Terminal for the font to appear" -ForegroundColor Yellow
        } else {
            Write-Warning "Failed to install JetBrainsMono Nerd Font"
        }
    } catch {
        Write-Warning "Error installing font: $_"
    }
} else {
    Write-Host "‚úÖ JetBrainsMono Nerd Font already installed" -ForegroundColor Green
}

# Create common directories
Write-Host "`nüìÅ Creating common directories..." -ForegroundColor Yellow
$directories = @(
    "$env:USERPROFILE\.config",
    "$env:USERPROFILE\.local\bin"
)

foreach ($dir in $directories) {
    if (-not (Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-Host "‚úÖ Created: $dir" -ForegroundColor Green
    }
}

Write-Host "`n‚ú® Initial setup complete!" -ForegroundColor Green
{{ end -}}